{"version":3,"sources":["data/Articles.js","App.js","serviceWorker.js","index.js"],"names":["articles","App","useState","setArticles","useEffect","getArticles","e","a","Database","data","values","Object","randomArticle","Math","floor","random","length","console","log","className","role","aria-label","onClick","href","url","target","rel","name","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8NAoFgBA,EApFE,CACd,CACG,GAAK,EACL,KAAQ,mDACR,IAAM,0IACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,8DACR,IAAM,sFACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,2BACR,IAAM,8EACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,yDACR,IAAM,4GACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,4CACR,IAAM,wGACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,mDACR,IAAM,sGACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,2CACR,IAAM,sHACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,+BACR,IAAM,kEACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,uBAEhB,CACG,GAAK,EACL,KAAQ,sCACR,IAAM,yFACN,MAAQ,KACR,UAAY,IACZ,WAAa,sBACb,WAAa,wB,MCnBLC,MAzDf,WAAgB,IAAD,EACsBC,mBAAS,IAD/B,mBACJF,EADI,KACMG,EADN,KAGXC,qBAAW,WACPC,MACD,IAGH,IAAMA,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sEAOGC,EAPH,OAOVC,EAPU,OAUVC,EAASC,OAAOD,OAAOD,GAGvBG,EAAgBF,EAAOG,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,SAC/DC,QAAQC,IAAIN,GACZT,EAAYS,GAfI,2CAAH,sDAiBjB,OACI,yBAAKO,UAAU,OACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,gCACI,wBAAIA,UAAU,mBAAd,4BAEA,6BAFA,0BAE4B,0BAAMC,KAAK,MAAMC,aAAW,iBAA5B,mBAE5B,4BAAQF,UAAU,4BAA4BG,QAASjB,GAAvD,oCAGR,yBAAKc,UAAU,gCACX,wBAAIA,UAAU,QAAd,+BACA,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACf,uBAAGI,KAAMvB,EAASwB,IAAKC,OAAO,SAASC,IAAI,uBAEvC,wBAAIP,UAAU,aAAd,IAA4BnB,EAAS2B,KAArC,cCrChBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.7be94ea6.chunk.js","sourcesContent":[" const articles = [\n    {\n       \"id\":1,\n       \"name\": \"22 Performance Optimization Techniques for React\",\n       \"url\":\"https://medium.com/better-programming/https-medium-com-mayank-gupta-6-88-21-performance-optimizations-techniques-for-react-d15fa52c2349\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 12:40:23\",\n       \"updated_at\":\"2019-10-17 12:40:23\"\n    },\n    {\n       \"id\":2,\n       \"name\": \"React JS â€” Understanding Functional & Class Components\",\n       \"url\":\"https://codeburst.io/react-js-understanding-functional-class-components-e65d723e909\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":3,\n       \"name\": \"Demystifying React Hooks\",\n       \"url\":\"https://medium.com/better-programming/demystifying-react-hooks-a0b56a6254c2\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":4,\n       \"name\": \"14 Beneficial Tips to Write Cleaner Code in React Apps\",\n       \"url\":\"https://medium.com/better-programming/14-beneficial-tips-to-write-cleaner-code-in-react-apps-a167798fa1ba\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":5,\n       \"name\": \"How to build reusable layouts in React JS\",\n       \"url\":\"https://medium.com/javascript-in-plain-english/how-to-build-reusable-layouts-in-react-js-daf8adcbca79\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":6,\n       \"name\": \"22 Miraculous Tools for React Developers in 2019\",\n       \"url\":\"https://medium.com/better-programming/22-miraculous-tools-for-react-developers-in-2019-7d72054e2306\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":7,\n       \"name\": \"Build a Chatbot in 10 minutes with React\",\n       \"url\":\"https://medium.com/javascript-in-plain-english/may-i-help-you-build-a-chatbot-in-10-minutes-with-react-df19e940bbc8\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":8,\n       \"name\": \"React Virtual DOM Postmortem\",\n       \"url\":\"https://medium.com/@js_tut/react-animated-tutorial-7a46fa3c2b96\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    },\n    {\n       \"id\":9,\n       \"name\": \"Building Basic React Authentication\",\n       \"url\":\"https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\",\n       \"email\":null,\n       \"published\":\"0\",\n       \"created_at\":\"2019-10-17 13:07:48\",\n       \"updated_at\":\"2019-10-17 13:07:48\"\n    }\n ]\n\n export default articles","import React, { useEffect, useState } from 'react';\nimport Database from './data/Articles';\nimport './App.css';\n\nfunction App() {\n    const [articles, setArticles]  = useState([])\n\n    useEffect( () => {\n        getArticles();\n    }, [])\n\n    \n    const getArticles = async (e) => {\n\n        /* You can also use a fake rest api for fetching data with using typicode's json-server */\n        \n        // const response = await fetch(`http://localhost:3001/articles`) \n        // const data = response.json()\n\n        const data = await Database\n\n        // Create array of object data\n        const values = Object.values(data)\n\n        // Generate random index based on number of data\n        const randomArticle = values[Math.floor(Math.random() * values.length)] \n        console.log(randomArticle)\n        setArticles(randomArticle)\n    }\n    return (\n        <div className=\"App\">\n            <div className=\"container mt-5 mb-4\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 mb-4 home-header\">\n                        <center>\n                            <h1 className=\"head-title mb-5\">\n                            Discover a new article at \n                            <br/> the click of a button <span role=\"img\" aria-label=\"ðŸ™Œ \"> ðŸ™Œ </span> \n                            </h1>\n                            <button className=\"btn btn-outline-secondary\" onClick={getArticles}>Give me another random article</button>\n                        </center>\n                    </div>\n                    <div className=\"col-lg-12 mt-4 article-title\">\n                        <h2 className=\"mb-5\">Here is your random article</h2>\n                        <div className=\"container article-title-link\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                <a href={articles.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    \n                                    <h2 className=\"mt-4 mb-4\"> {articles.name} </h2>\n                                </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}